{"version":3,"file":"component---src-pages-404-js-2e10af264a96e92ef9cb.js","mappings":"uJAqDA,IAlDe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EADcC,4BACDJ,EAASK,SAC5B,IAAIC,EAgBJ,OAbEA,EADEH,EAEA,sBAAII,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKR,IAKhB,gBAAC,EAAAO,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCR,GAML,uBAAKM,UAAU,iBAAiB,oBAAmBJ,GACjD,0BAAQI,UAAU,iBAAiBD,GACnC,4BAAOJ,GACP,8BACE,qBAAGQ,MAAO,CAAEC,QAAS,OAAQC,eAAgB,kBAC3C,0BAAI,IAAIC,MAAOC,eAAmB,eAAY,IAC9C,qBAAGC,KAAK,4BAA2B,UAAU,IAQ7C,wBAAML,MAAO,CAAEM,WAAY,SAAU,gBACrB,IACd,qBACED,KAAK,oDACLE,OAAO,SACPC,IAAI,+BACL,sBAMH,C,+CCAV,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAElB,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEkB,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBtB,MAExC,OACE,gCACE,6BAAQuB,EAAkBvB,EAAK,MAAMuB,EAAiBvB,GACtD,wBAAMwB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASzB,IACnC,wBAAM0B,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASzB,IACpC,wBAAMwB,KAAK,sBAAsBC,QAASJ,IACzCpB,EACA,C,kGCvCP,MAWa4B,EAAO,IAAM,gBAAC,IAAG,CAAC7B,MAAM,mBAErC,UAbqB,IAAwB,IAAvB,KAAE8B,EAAI,SAAE/B,GAAU,EACtC,MAAMgC,EAAYD,EAAKX,KAAKG,aAAatB,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAO+B,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        <p style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <b>{new Date().getFullYear()}</b>, Built with{\" \"}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n          {` `}\n          {/*\n           * Příklad zobrazení licence na vašem blogu.\n           * Pro zobrazení licence je třeba vložit její text nebo odkaz na webovou stránku,\n           * na které je licence definována.\n           * V tomto případě používáme odkaz na licenci CC BY-NC-ND 4.0.\n           */}\n          <span style={{ marginLeft: \"auto\" }}>\n            site license:{\" \"}\n            <a\n              href=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\"\n              target=\"_blank\"\n              rel=\"license noopener noreferrer\"\n            >\n              CC BY-NC-ND 4.0\n            </a>\n          </span>\n        </p>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["location","title","children","isRootPath","__PATH_PREFIX__","pathname","header","className","Link","to","style","display","justifyContent","Date","getFullYear","href","marginLeft","target","rel","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","data","siteTitle"],"sourceRoot":""}